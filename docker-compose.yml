version: "3.7"
services:
  proxy:
    image: bahmnihwc/proxy:${PROXY_IMAGE_TAG:?}
    volumes:
    - ${CERTIFICATE_PATH}:/etc/tls
    - "bahmni-patient-images:/home/bahmni/patient_images"
    environment:
      TZ: ${TZ}

    ports:
      - "80:80"
      - "443:443"
  bahmni-config:
    image: '${CONFIG_IMAGE_NAME:?}:${CONFIG_IMAGE_TAG:?}'
    volumes:
      - '${CONFIG_VOLUME:?}:/usr/local/bahmni_config'
    environment:
      TZ: ${TZ}

  openmrs:
    profiles: ['emr']
    image: bahmnihwc/openmrs:${OPENMRS_IMAGE_TAG}
    environment:
      OMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OMRS_DB_HOSTNAME: ${OPENMRS_DB_HOST:?}
      OMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OMRS_CREATE_TABLES: ${OPENMRS_DB_CREATE_TABLES}
      OMRS_AUTO_UPDATE_DATABASE: ${OPENMRS_DB_AUTO_UPDATE}
      OMRS_MODULE_WEB_ADMIN: ${OPENMRS_MODULE_WEB_ADMIN}
      # OMRS_DEV_DEBUG_PORT: ${OMRS_DEV_DEBUG_PORT}
      OMRS_JAVA_SERVER_OPTS: ${OMRS_JAVA_SERVER_OPTS}
      OMRS_JAVA_MEMORY_OPTS: ${OMRS_JAVA_MEMORY_OPTS}
      OPENELIS_HOST: ${OPENELIS_HOST:?}
      OPENELIS_PORT: ${OPENELIS_PORT:?}
      OPENELIS_ATOMFEED_USER: ${OPENELIS_ATOMFEED_USER:?}
      OPENELIS_ATOMFEED_PASSWORD: ${OPENELIS_ATOMFEED_PASSWORD:?}
      #Mail config
      SEND_MAIL: ${SEND_MAIL}
      MAIL_TRANSPORT_PROTOCOL: ${MAIL_TRANSPORT_PROTOCOL}
      MAIL_SMTP_HOST: ${MAIL_SMTP_HOST}
      MAIL_SMTP_PORT: ${MAIL_SMTP_PORT}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH}
      MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS_ENABLE}
      MAIL_SMTP_SSL_ENABLE: ${MAIL_SMTP_SSL_ENABLE}
      MAIL_DEBUG: ${MAIL_DEBUG}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      #HIP-OMOD Variables. Refer here https://github.com/BahmniIndiaDistro/openmrs-module-hip/tree/master#docker-setup
      PHONE_NUMBER: ${PHONE_NUMBER:?}
      OMRS_DOCKER_ENV: ${OPENMRS_DOCKER_ENV}
      OMRS_C3P0_MAX_SIZE: ${OMRS_C3P0_MAX_SIZE}
      TZ: ${TZ}
      EAUSHADHA_ACCESS_TOKEN: ${EAUSHADHA_ACCESS_TOKEN}
    # ports:
      # - ${OMRS_DEV_DEBUG_PORT}:${OMRS_DEV_DEBUG_PORT}
    volumes:
      - '${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro'
      - 'configuration_checksums:/openmrs/data/configuration_checksums'
      - "bahmni-lab-results:/home/bahmni/uploaded_results"
      # - "${BAHMNI_OPENMRS_MODULES_PATH:?}/:/openmrs/data/modules/"
      - 'bahmni-patient-images:/home/bahmni/patient_images'
      - 'bahmni-document-images:/home/bahmni/document_images'
      - 'bahmni-clinical-forms:/home/bahmni/clinical_forms'
    depends_on:
      - openmrsdb

  openmrsdb:
    image: ${OPENMRS_DB_IMAGE_NAME:?}
    restart: always
    profiles: ["emr"]
    command: --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${OPENMRS_DB_NAME:?}
      MYSQL_USER: ${OPENMRS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      TZ: ${TZ}
    ports:
      - '3306:3306'
    volumes:
      - 'openmrsdbdata:/var/lib/mysql'
      - 'configuration_checksums:/configuration_checksums'
  bahmni-web:
    image: bahmnihwc/bahmni-web:${BAHMNI_WEB_IMAGE_TAG:?}
    profiles: ["emr"]
    volumes:
      #- "${BAHMNI_APPS_PATH:?}/ui/app/:/usr/local/apache2/htdocs/bahmni"
      #- "${BAHMNI_APPS_PATH:?}/ui/node_modules/@bower_components/:/usr/local/apache2/htdocs/bahmni/components"
      - '${CONFIG_VOLUME:?}:/usr/local/apache2/htdocs/bahmni_config/:ro'
  
  bahmni-lab:
    profiles: ["lab-lite","emr","bahmni-lite"]
    image: 'bahmnihwc/bahmni-lab:${BAHMNI_LAB_IMAGE_TAG:?}'
  
  bahmni-inventory:
   profiles: ["inventory","emr","bahmni-lite"]
   image: 'bahmnihwc/bahmni-inventory:${BAHMNI_INVENTORY_IMAGE_TAG:?}'

  db:
    container_name: db
    image: postgres:${POSTGRES_IMAGE_TAG:?}
    profiles: ["abdm"]
    environment:
      - POSTGRES_USER=${HIP_DB_USER:?}
      - POSTGRES_PASSWORD=${HIP_DB_PASSWORD:?}
      - TZ=${TZ}
    ports:
      - "5433:5432"
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
  rabbitmq:
      image: rabbitmq:${RABBITMQ_IMAGE_TAG:?}
      profiles: ["abdm"]
      container_name: rabbitmq
      ports:
        - "5672:5672"
      environment:
        TZ: ${TZ}
  otp:
      image: bahmniindiadistro/otp-service:${OTP_SERVICE_IMAGE_TAG:?}
      profiles: ["abdm", "sms"]
      container_name: otp
      depends_on:
        - db
      environment:
        whitelisted:numbers: ${OTP_WHITELIST_NUMBERS}
        ConnectionStrings:DefaultConnection: Host=${OTP_DB_HOST:?};Port=${OTP_DB_PORT:?};Username=${OTP_DB_USER:?};Password=${OTP_DB_PASSWORD:?};Database=${OTP_DB_NAME:?};
        TZ: ${TZ}

  hiu-db-setup:
      image: bahmniindiadistro/hiu-db:${HIU_DB_INITIALIZER_IMAGE_TAG:?}
      profiles: ["abdm"]
      container_name: hiu-db-setup
      environment:
        - 'JAVA_TOOL_OPTIONS=-Djdbc.url=${HIU_DB_URL:?} -Djdbc.username=${HIU_DB_USER:?} -Djdbc.password=${HIU_DB_PASSWORD:?} -Djdbc.database=${HIU_DB_NAME:?}'
        - TZ=${TZ}

  hip:
    container_name: hip
    image: bahmniindiadistro/hip:${HIP_IMAGE_TAG:?}
    profiles: ["abdm"]
    ports:
      - "8000:80"
    depends_on:
      - db
      - otp
      - rabbitmq
    environment:
      Gateway:clientSecret: ${ABDM_GATEWAY_CLIENT_SECRET:?}
      Gateway:clientId: ${ABDM_GATEWAY_CLIENT_ID:?}
      Gateway:url: ${ABDM_GATEWAY_URL:?}
      OpenMrs:url: ${OPENMRS_URL:?}
      OpenMrs:password: ${OPENMRS_PASSWORD:?}
      OpenMrs:phoneNumber: ${PHONE_NUMBER:?}
      Gateway:cmSuffix: ${ABDM_CONSENT_MANAGEMENT_SUFFIX:?}
      OtpService:BaseUrl: ${HIP_OTP_SERVICE_URL:?}
      hip:url: ${HIP_URL:?}
      HEALTH_CHECK_DURATION: ${HIP_OPENMRS_HEALTH_CHECK_DURATION:?}
      Cors:allowedOrigins: ${HIP_CORS_ALLOWED_ORIGIN:?}
      Bahmni:Id: ${HIP_ID:?}
      rabbit:HostName: ${RABBITMQ_HOST:?}
      rabbit:UserName: ${RABBITMQ_USERNAME:?}
      rabbit:Password: ${RABBITMQ_PASSWORD:?}
      ConnectionStrings:DefaultConnection: Host=${HIP_DB_HOST:?};Port=${HIP_DB_PORT:?};Username=${HIP_DB_USER:?};Password=${HIP_DB_PASSWORD:?};Database=${HIP_DB_NAME:?};
      TZ: ${TZ}

  hiu:
    image: bahmniindiadistro/hiu:${HIU_IMAGE_TAG:?}
    profiles: ["abdm"]
    container_name: hiu
    environment:
      HIU_ID: ${HIU_ID:?}
      HIU_NAME: ${HIU_NAME:?}
      IDENTITY_JWK_URL: ${ABDM_IDENTITY_JWK_URL:?}
      DATA_PUSH_URL: ${HIU_DATA_PUSH_URL:?}
      CONSENT_NOTIFICATION_URL: ${ABDM_CONSENT_NOTIFICATION_URL:?}
      CONSENT_MANAGEMENT_SUFFIX:  ${HIU_ABDM_CONSENT_MANAGEMENT_SUFFIX:?}
      CONSENT_MANAGEMENT_URL: ${ABDM_CONSENT_MANAGEMENT_URL:?}
      DEFAULT_PAGE_SIZE: ${HIU_DEFAULT_PAGE_SIZE:?}
      MAX_PAGE_SIZE: ${HIU_MAX_PAGE_SIZE:?}
      LOCAL_STORAGE_PATH: ${HIU_LOCAL_STORAGE_PATH}
      HIU_CLIENT_ID: ${ABDM_GATEWAY_CLIENT_ID:?}
      HIU_CLIENT_SECRET: ${ABDM_GATEWAY_CLIENT_SECRET:?}
      POSTGRES_HOST: ${HIU_DB_HOST:?}
      POSTGRES_PORT: ${HIU_DB_PORT}
      CONSENT_MANAGER_DB_NAME: ${HIU_DB_NAME:?}
      POSTGRES_USER: ${HIU_DB_USER:?}
      POSTGRES_PASSWORD: ${HIU_DB_PASSWORD:?}
      DB_CONNECTION_POOL_SIZE: ${HIU_DB_CONNECTION_POOL_SIZE:?}
      OFFSET_IN_DAYS: ${HIU_OFFSET_IN_DAYS:?}
      USING_GATEWAY: ${HIU_USING_GATEWAY:?}
      GATEWAY_BASE_URL: ${ABDM_GATEWAY_BASE_URL:?}
      GATEWAY_REQUEST_TIMEOUT: ${HIU_GATEWAY_REQUEST_TIMEOUT:?}
      GATEWAY_JWK_URL: ${ABDM_GATEWAY_JWK_URL:?}
      HFR_AFFINITY_DOMAINS: ${ABDM_HFR_AFFINITY_DOMAINS:?}
      RABBITMQ_HOST: ${HIU_RABBITMQ_HOST:?}
      RABBITMQ_PORT: ${HIU_RABBITMQ_PORT:?}
      RABBITMQ_USERNAME: ${HIU_RABBITMQ_USERNAME:?}
      RABBITMQ_PASSWORD: ${HIU_RABBITMQ_PASSWORD:?}
      MAX_IN_MEMORY_SIZE: ${HIU_MAX_IN_MEMORY_SIZE:?}
      DATA_FLOW_CONSENT_REQUEST_WAIT_TIME: ${HIU_DATA_FLOW_CONSENT_REQUEST_WAIT_TIME:?}
      DATA_FLOW_CONSENT_ARTEFACT_WAIT_TIME: ${HIU_DATA_FLOW_CONSENT_ARTEFACT_WAIT_TIME:?}
      DATA_FLOW_PART_WAIT_TIME: ${HIU_DATA_FLOW_PART_WAIT_TIME:?}
      TZ: ${TZ}
    ports:
      - "9053:8003"

  hiu-ui:
    image: bahmniindiadistro/hiu-ui:${HIU_UI_IMAGE_TAG:?}
    profiles: ["abdm"]
    container_name: hiu-ui
    environment:
      BACKEND_BASE_URL: ${HIU_BACKEND_BASE_URL:?}
      BASE_NAME: ${HIU_UI_BASE_NAME:?}
      TIMEZONE_OFFSET: ${TIMEZONE_OFFSET:?}
      TITLE: "HIU"
      TZ: ${TZ}
    ports:
      - "5000:5000"

  hip-atomfeed-listener:
    container_name: hip-atomfeed-listener
    image: bahmniindiadistro/hip-atomfeed:${HIP_ATOMFEED_IMAGE_TAG:?}
    profiles: ["abdm"]
    environment:
      DATABASE_URL: ${HIP_ATOMFEED_DB_URL:?}
      DATABASE_NAME: ${HIP_ATOMFEED_DB_NAME:?}
      DATABASE_USERNAME: ${HIP_DB_USER:?}
      DATABASE_PASSWORD: ${HIP_DB_PASSWORD:?}
      OPENMRS_URL: ${OPENMRS_SESSION_URL:?}
      OPENMRS_ENCOUNTER_FEED_URL: ${OPENMRS_ENCOUNTER_FEED_URL:?}
      OPENMRS_USERNAME: ${OPENMRS_USERNAME:?}
      OPENMRS_PASSWORD: ${OPENMRS_PASSWORD:?}
      HIP_URL: ${HIP_URL:?}
      PHONE_NUMBER: ${PHONE_NUMBER:?}
      TZ: ${TZ}
    depends_on:
      - db

  reports:
    image: bahmni/reports:${REPORTS_IMAGE_TAG:?}
    profiles: [ "reports", "emr", "bahmni-lite" ]
    environment:
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST:?}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OPENMRS_DB_USERNAME: ${MYSQL_ROOT_USERNAME:?}
      OPENMRS_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENELIS_DB_SERVER: openelisdb
      REPORTS_DB_SERVER: reportsdb
      REPORTS_DB_NAME: ${REPORTS_DB_NAME:?}
      REPORTS_DB_USERNAME: ${REPORTS_DB_USERNAME:?}
      REPORTS_DB_PASSWORD: ${REPORTS_DB_PASSWORD:?}
      ODOO_DB_SERVER: odoodb
      ODOO_DB_USERNAME: ${ODOO_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD:?}
      TZ: ${TZ}
    volumes:
      - '${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro'
    depends_on:
      - reportsdb
      - openmrsdb
      - bahmni-web

  reportsdb:
    image: mysql:5.6
    profiles: ["reports"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${REPORTS_DB_NAME:?}
      MYSQL_USER: ${REPORTS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${REPORTS_DB_PASSWORD:?}
      TZ: ${TZ}

  patient-documents:
     image: 'bahmni/patient-documents:${PATIENT_DOCUMENTS_TAG:?}'
     ports:
       - '8099:80'
     profiles: ["emr"]
     volumes:
       - 'bahmni-document-images:/usr/share/nginx/html/document_images'
       - 'bahmni-lab-results:/usr/share/nginx/html/uploaded_results'
     environment:
       - OPENMRS_HOST=${OPENMRS_HOST:?}

  appointments:
    image: bahmni/appointments:${APPOINTMENTS_IMAGE_TAG:?}
    profiles: ["emr","appointments"]
#    volumes:
#      - "${APPOINTMENTS_PATH:?}/dist/:/usr/local/apache2/htdocs/appointments"

  implementer-interface:
    image: bahmni/implementer-interface:${IMPLEMENTER_INTERFACE_IMAGE_TAG:?}
    profiles: ["emr","implementer-interface"]
    #volumes:
    #  - "${IMPLEMENTER_INTERFACE_CODE_PATH:?}/dist:/usr/local/apache2/htdocs/implementer_interface"
    depends_on:
      - openmrs

  abha-verification:
    image: bahmniindiadistro/abha-verification:${ABHA_VERIFICATION_IMAGE_TAG:?}
    profiles: ["abdm"]

  crater-atomfeed:
    image: bahmni/crater-atomfeed:latest
    profiles: ["crater"]
    environment:
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD}
      CRATER_ATOMFEED_DB_HOST: ${CRATER_ATOMFEED_DB_HOST:?}
      CRATER_ATOMFEED_DB_PORT: ${CRATER_ATOMFEED_DB_PORT:?}
      CRATER_USERNAME: ${CRATER_USERNAME}
      CRATER_PASSWORD: ${CRATER_PASSWORD}
      CRATER_ATOMFEED_DB_USERNAME: ${CRATER_ATOMFEED_DB_USERNAME}
      CRATER_ATOMFEED_DB_PASSWORD: ${CRATER_ATOMFEED_DB_PASSWORD}
      CRATER_ATOMFEED_DB_NAME: ${CRATER_ATOMFEED_DB_NAME}
      CRATER_URL: ${CRATER_URL}
      TZ: ${TZ}

  crater-atomfeed-db:
    platform: linux/amd64
    image: mysql:5.7
    profiles: ["crater"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${CRATER_ATOMFEED_DB_NAME:?}
      MYSQL_USER: ${CRATER_ATOMFEED_DB_USERNAME:?}
      MYSQL_PASSWORD: ${CRATER_ATOMFEED_DB_PASSWORD:?}
      TZ: ${TZ}
  crater-php:
    image: bahmni/crater-php:${CRATER_PHP_IMAGE_TAG:?}
    profiles: ["crater"]
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
     - 'crater-app-data:/var/www/storage/app/public'
    environment:
      APP_URL: ${CRATER_APP_URL:?}
      DB_HOST: ${CRATER_DB_HOST:?}
      DB_PORT: ${CRATER_DB_PORT:?}
      DB_DATABASE: ${CRATER_DB_DATABASE:?}
      DB_USERNAME: ${CRATER_DB_USERNAME:?}
      DB_PASSWORD: ${CRATER_DB_PASSWORD:?}
      SANCTUM_STATEFUL_DOMAINS: ${CRATER_SANCTUM_STATEFUL_DOMAINS:?}
      SESSION_DOMAIN: ${CRATER_SESSION_DOMAIN:?}
      AUTO_INSTALL: ${CRATER_AUTO_INSTALL:?}
      ADMIN_NAME: ${CRATER_ADMIN_NAME:?}
      ADMIN_EMAIL: ${CRATER_ADMIN_EMAIL:?}
      ADMIN_PASSWORD: ${CRATER_ADMIN_PASSWORD:?}
      COMPANY_NAME: ${CRATER_COMPANY_NAME:?}
      COMPANY_SLUG: ${CRATER_COMPANY_SLUG:?}
      COUNTRY_ID: ${CRATER_COUNTRY_ID:?}
      APP_DEBUG: ${CRATER_APP_DEBUG:?}
      TZ: ${TZ}

  crater-nginx:
    image: bahmni/crater-nginx:${CRATER_NGINX_IMAGE_TAG:?}
    profiles: ["crater"]
    restart: unless-stopped
    volumes:
     - 'crater-app-data:/var/www/public/storage'
    ports:
      - 444:443

  craterdb:
    image: mysql:5.7
    profiles: ["crater"]
    restart: always
    volumes:
      - craterdb:/var/lib/mysql
      # # If you want to persist data on the host, comment the line above this one...
      # # and uncomment the line under this one.
      # - ./docker-compose/db/data:/var/lib/mysql:rw,delegated
    environment:
      MYSQL_USER: ${CRATER_DB_USERNAME:?}
      MYSQL_PASSWORD: ${CRATER_DB_PASSWORD:?}
      MYSQL_DATABASE: ${CRATER_DB_DATABASE:?}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      TZ: ${TZ}
    ports:
      - '33006:3306'

  avni:
    image: bahmnihwc/avni-server
    profiles: ["avni"]
    environment:
      OPENCHS_MODE: "staging"
      AWS_S3_ENABLE: "false"
      OPENCHS_DATABASE_USER: ${AVNI_DB_USERNAME}
      OPENCHS_DATABASE_PASSWORD: ${AVNI_DB_PASSWORD}
      OPENCHS_DATABASE_URL: "jdbc:postgresql://${AVNI_DB_HOST}:5432/${AVNI_DB_NAME}?currentSchema=public"
      AVNI_IDP_TYPE: keycloak
      OPENCHS_KEYCLOAK_ENABLED: true
      OPENCHS_KEYCLOAK_SERVER: http://${HOSTNAME}:8083/keycloak
      OPENCHS_KEYCLOAK_CLIENT_SECRET: ${AVNI_KEYCLOAK_CLIENT_SECRET}
      OPENCHS_MINIO_ENABLED: true
      OPENCHS_MINIO_URL: http://minio.avni.local:9000
      OPENCHS_BUCKET_NAME: ${AVNI_MINIO_BUCKET_NAME}
      OPENCHS_MINIO_ACCESS_KEY: ${AVNI_MINIO_ACCESS_KEY}
      OPENCHS_MINIO_SECRET_ACCESS_KEY: ${AVNI_MINIO_SECRET_ACCESS_KEY}
      #LOGGING_LEVEL_ROOT: DEBUG
      NODE_SERVER_URL: "http://rules-server:3000"
      DEBUG_OPTS: ${AVNI_DEBUG_OPTS}
      SPRING_JACKSON_TIME_ZONE: ${TZ}
      TZ: ${TZ}
    ports:
      - "8021:8021"
      - "8030:8030"

  avni_db:
    image: bahmnihwc/avni-db
    restart: always
    profiles: ["avni"]
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${AVNI_DB_ROOT_PASSWORD}
      AVNI_DB_USERNAME: ${AVNI_DB_USERNAME}
      AVNI_DB_PASSWORD: ${AVNI_DB_PASSWORD}
      AVNI_DB_NAME: ${AVNI_DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
      TZ: ${TZ}
    volumes:
      - 'avni-db-data:/var/lib/postgresql/data'
  
  rules-server:
    image: bahmnihwc/avni-rules-server
    profiles: ["avni"]

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    profiles: ["keycloak"]
    command: "start-dev"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://${KEYCLOAK_DB_HOST}/${KEYCLOAK_DB_NAME}"
      KC_DB_USERNAME: ${KEYCLOAK_DB_USERNAME}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_PROXY: "edge"
      KC_HTTP_RELATIVE_PATH: "/keycloak"
      KC_HOSTNAME_URL: "http://${HOSTNAME}:8083/keycloak"
      # KC_HTTPS_CERTIFICATE_FILE: "/etc/certs/cert.pem"
      # KC_HTTPS_CERTIFICATE_KEY_FILE: "/etc/certs/key.pem"
      TZ: ${TZ}
    volumes:
      - "${CERTIFICATE_PATH}:/etc/certs"
    ports:
      - "8083:8080"

  keycloak_db:
    image: bahmnihwc/keycloak-db
    profiles: ["keycloak"]
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USERNAME}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      TZ: ${TZ}
    volumes:
      - 'keycloak-db-data:/var/lib/postgresql/data'
  
  minio:
    image: quay.io/minio/minio:RELEASE.2023-04-28T18-11-17Z
    profiles: ["minio"]
    command: server /data --console-address ":9090"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      TZ: ${TZ}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9090:9090"

  avni_integration:
    image: bahmnihwc/avni-integration-service
    profiles: ["avni-integration"]
    environment:
      AVNI_INT_DATASOURCE: jdbc:postgresql://${AVNI_INTEGRATION_DB_HOST}:5432/${AVNI_INTEGRATION_DB_NAME}
      AVNI_INT_DB_USER: ${AVNI_INTEGRATION_DB_USER}
      AVNI_INT_DB_PASSWORD: ${AVNI_INTEGRATION_DB_PASSWORD}
      AVNI_INT_SERVER_PORT: 6013
      DEBUG_OPTS: ${AVNI_INTEGRATION_DEBUG_OPTS}
      BAHMNI_AVNI_API_URL: http://${AVNI_HOST}:${AVNI_PORT}
      BAHMNI_AVNI_API_USER: ${AVNI_INTEGRATION_USER}
      BAHMNI_AVNI_API_PASSWORD: ${AVNI_INTEGRATION_PASSWORD}
      OPENMRS_BASE_URL: http://${OPENMRS_HOST}:${OPENMRS_PORT}
      OPENMRS_USER: ${AVNI_INTEGRATION_OPENMRS_USERNAME}
      OPENMRS_PASSWORD: ${AVNI_INTEGRATION_OPENMRS_PASSWORD}
      BAHMNI_SCHEDULE_CRON: ${AVNI_INTEGRATION_CRON}
      BAHMNI_SCHEDULE_CRON_FULL_ERROR: ${AVNI_INTEGRATION_CRON}
      BAHMNI_AVNI_IDP_TYPE: Keycloak
      BAHMNI_INT_APP_TASKS: AvniSubject,AvniGeneralEncounter,BahmniPatient,BahmniEncounter,AvniErrorRecords,BahmniErrorRecords
      TZ: ${TZ}
    ports:
      - "6013:6013"
      - "8031:8031"
  
  avni_integration_db:
    image: bahmnihwc/avni-integration-db
    restart: always
    profiles: ["avni-integration"]
    environment:
      POSTGRES_DB: ${AVNI_INTEGRATION_DB_NAME}
      POSTGRES_USER: ${AVNI_INTEGRATION_DB_USER}
      POSTGRES_PASSWORD: ${AVNI_INTEGRATION_DB_PASSWORD}
      TZ: ${TZ}
    volumes:
      - 'avni-int-db-data:/var/lib/postgresql/data'

  avni_etl:
    image: bahmnihwc/avni-etl
    profiles: ["avni-etl"]
    environment:
      OPENCHS_DATABASE_USER: ${AVNI_DB_USERNAME}
      OPENCHS_DATABASE_PASSWORD: ${AVNI_DB_PASSWORD}
      OPENCHS_DATABASE_URL: "jdbc:postgresql://${AVNI_DB_HOST}:5432/${AVNI_DB_NAME}?currentSchema=public"
      ETL_DEBUG_MODE: ${AVNI_ETL_DEBUG_MODE}
      TZ: ${TZ}

volumes:
  openmrs-data:
  openmrsdbdata:
  bahmni-patient-images:
  bahmni-document-images:
  postgresql:
  postgresql_data:
  bahmni-config:
  configuration_checksums:
  craterdb:
  crater-app-data:
  avni-db-data:
  avni-int-db-data:
  keycloak-db-data:
  minio-data:
  ssl-certs:
  bahmni-clinical-forms:
  bahmni-lab-results: